{
  "openapi": "3.0.0",
  "info": {
    "title": "Marzipan API",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "tenantAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer authentication header of the form `Bearer <token>`, where `<token>` is your API token.",
        "bearerFormat": "JWT"
      },
      "accountAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer authentication header of the form `Bearer <token>`, where `<token>` is the account token returned from the `Login` endpoint."
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the product"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly product identifier"
          },
          "url": {
            "type": "string",
            "description": "Full URL to the product page"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "product_type": {
            "type": "string",
            "enum": ["physical", "event", "subscription", "bundle"],
            "description": "Type of product"
          },
          "subscription_type": {
            "type": "string",
            "enum": ["picknmix", "variable"],
            "description": "Type of subscription. Only present for subscription products"
          },
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit"
          },
          "collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collection"
            },
            "description": "Collections this product belongs to"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "out_of_stock"],
            "description": "Product status - automatically set to out_of_stock when quantity is 0"
          },
          "images": {
            "type": "object",
            "properties": {
              "product": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductImage"
                },
                "description": "Main product images"
              },
              "labels": {
                "type": "object",
                "properties": {
                  "front": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductImage"
                    },
                    "description": "Front label images"
                  },
                  "back": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductImage"
                    },
                    "description": "Back label images"
                  }
                }
              }
            },
            "description": "Product images organized by type"
          },
          "primaryImage": {
            "$ref": "#/components/schemas/ProductImage",
            "description": "Primary product image"
          },
          "price": {
            "type": "string",
            "description": "Formatted price (e.g., £10.00). For pick-and-mix subscriptions with per-item pricing, may show 'from £X.XX'"
          },
          "salePrice": {
            "type": "string",
            "nullable": true,
            "description": "Formatted sale price if on sale"
          },
          "subscriberPrice": {
            "type": "string",
            "nullable": true,
            "description": "Special price for subscribers. Not shown for subscription products"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "store_slug": {
            "type": "string",
            "description": "Store URL slug"
          },
          "subscriptions_slug": {
            "type": "string",
            "description": "Subscriptions URL slug"
          },
          "availability": {
            "type": "string",
            "enum": ["all", "subscribers"],
            "description": "Product availability"
          },
          "upsell_products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Product ID"
                },
                "name": {
                  "type": "string",
                  "description": "Product name"
                },
                "sku": {
                  "type": "string",
                  "description": "Product SKU"
                },
                "price": {
                  "type": "string",
                  "description": "Formatted price"
                },
                "sale_price": {
                  "type": "string",
                  "nullable": true,
                  "description": "Formatted sale price"
                },
                "subscriber_price": {
                  "type": "string",
                  "nullable": true,
                  "description": "Formatted subscriber price"
                }
              }
            },
            "description": "Upsell products with simplified data"
          },
          "linkedSubscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedSubscription"
            },
            "description": "Full details of linked subscriptions. Only included when using ?include=linkedSubscriptions parameter"
          },
          "billing_frequency": {
            "type": "integer",
            "description": "Billing frequency in months. Only present for subscription products"
          },
          "billing_frequencies": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Available billing frequencies. Only present for subscription products"
          },
          "pricing_type": {
            "type": "string",
            "enum": ["fixed", "per_item"],
            "description": "Pricing type for subscriptions. Only present for subscription products"
          },
          "bundle_items": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Items included in bundle. Only present for bundle products"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Product attributes like color, size, etc."
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Product options with their possible values"
          },
          "related_products": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Related products"
          },
          "awards": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Product awards"
          },
          "reviews": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Product reviews"
          },
          "meta_title": {
            "type": "string",
            "description": "SEO meta title"
          },
          "meta_description": {
            "type": "string",
            "description": "SEO meta description"
          },
          "meta_image": {
            "type": "string",
            "nullable": true,
            "description": "SEO meta image URL (1200x630)"
          },
          "linked_subscription": {
            "type": "boolean",
            "description": "Whether product has linked subscriptions. Only present if product has linked subscriptions"
          },
          "store_name": {
            "type": "string",
            "description": "Store name"
          }
        }
      },
      "ProductSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the product"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly product identifier"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Product price"
          },
          "productType": {
            "type": "string",
            "enum": ["physical", "event", "subscription"],
            "description": "Type of product"
          }
        }
      },
      "ProductImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the image"
          },
          "path": {
            "type": "string",
            "description": "Relative path to the image file"
          },
          "src": {
            "type": "string",
            "format": "uri",
            "description": "Full URL to access the image"
          },
          "alt": {
            "type": "string",
            "nullable": true,
            "description": "Alternative text for accessibility"
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type of the image (e.g., image/jpeg, image/png)"
          },
          "filename": {
            "type": "string",
            "description": "Original filename of the uploaded image"
          }
        }
      },
      "LinkedSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Subscription ID"
          },
          "name": {
            "type": "string",
            "description": "Subscription name"
          },
          "options": {
            "type": "object",
            "description": "Subscription options"
          },
          "status": {
            "type": "string",
            "description": "Subscription status"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Subscription start date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "Subscription end date"
          },
          "next_billing_date": {
            "type": "string",
            "format": "date",
            "description": "Next billing date"
          },
          "billing_interval": {
            "type": "integer",
            "description": "Billing interval in months"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          }
        }
      },
      "Collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the collection"
          },
          "name": {
            "type": "string",
            "description": "Collection name"
          },
          "description": {
            "type": "string",
            "description": "Collection description"
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly collection identifier"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Collection attributes"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token for API access"
          },
          "isSubscriber": {
            "type": "boolean",
            "description": "Whether the user has an active subscription"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": ["message"]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Validation error message"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Field-specific validation errors"
          }
        },
        "required": ["message", "errors"]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.marzipan.co/v1"
    }
  ],
  "security": [
    {
      "tenantAuth": []
    }
  ],
  "tags": [
    {
      "name": "Account",
      "description": "Account management endpoints including registration, login, and user details"
    },
    {
      "name": "Carts",
      "description": "Shopping cart management endpoints"
    },
    {
      "name": "Products",
      "description": "Product catalog and search endpoints"
    },
    {
      "name": "Subscriptions",
      "description": "Subscription management and renewal endpoints"
    },
    {
      "name": "CMS",
      "description": "Content management system endpoints"
    },
    {
      "name": "Messaging",
      "description": "Message and communication endpoints"
    },
    {
      "name": "Search",
      "description": "Search functionality endpoints"
    }
  ],
  "paths": {
    "/account/register": {
      "parameters": [],
      "post": {
        "tags": ["Account"],
        "summary": "Register",
        "description": "Register a new user account with an email address. A verification email will be sent to complete the registration process.",
        "security": [
          {
            "tenantAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/account/login": {
      "parameters": [],
      "post": {
        "tags": ["Account"],
        "summary": "Login",
        "description": "Authenticate a user with their email address and receive an authentication token for API access.",
        "security": [
          {
            "tenantAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/logout": {
      "parameters": [],
      "post": {
        "tags": ["Account"],
        "summary": "Logout",
        "description": "Invalidate the current authentication token and log out the user from their session.",
        "security": [
          {
            "accountAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/account/password": {
      "parameters": [],
      "post": {
        "tags": ["Account"],
        "summary": "Password Reset",
        "description": "Request a password reset link to be sent to the user's email address. The user can use the link to set a new password.",
        "security": [
          {
            "accountAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "returnUrl": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/orders": {
      "parameters": [],
      "get": {
        "tags": ["Account"],
        "summary": "Orders",
        "description": "Retrieve a list of all orders associated with the authenticated user's account, including order status and payment information.",
        "security": [
          {
            "accountAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "string"},
                          "ref": {"type": "string"},
                          "items": {"type": "integer"},
                          "amount": {"type": "string"},
                          "status": {"type": "string"},
                          "paymentStatus": {"type": "string"},
                          "createdAt": {"type": "string"}
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "uuid",
                      "ref": "string",
                      "items": 1,
                      "amount": "£0.00",
                      "status": "pending|shipped|cancelled",
                      "paymentStatus": "paid|failed|pending",
                      "createdAt": "string"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/account/subscriptions": {
      "parameters": [],
      "get": {
        "tags": ["Account"],
        "summary": "Subscriptions",
        "description": "Get all active and inactive subscriptions for the authenticated user, including subscription details and renewal dates.",
        "security": [
          {
            "accountAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "string"},
                          "subscriptionType": {"type": "string"},
                          "name": {"type": "string"},
                          "productId": {"type": "string"},
                          "price": {"type": "string"},
                          "status": {"type": "string"},
                          "startDate": {"type": "string"},
                          "endDate": {"type": "string"},
                          "renewalDate": {"type": "string"},
                          "billingInterval": {"type": "integer"}
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "uuid",
                      "subscriptionType": "picknmix|variable",
                      "name": "string",
                      "productId": "uuid",
                      "price": "£0.00",
                      "status": "active|inactive|cancelled",
                      "startDate": "string",
                      "endDate": "string",
                      "renewalDate": "string",
                      "billingInterval": 1
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/account/details": {
      "parameters": [],
      "get": {
        "tags": ["Account"],
        "summary": "Details",
        "description": "Retrieve the authenticated user's account details including personal information and marketing preferences.",
        "security": [
          {
            "accountAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "firstName": {"type": "string"},
                        "lastName": {"type": "string"},
                        "email": {"type": "string", "format": "email"},
                        "phone": {"type": "string"},
                        "marketing": {"type": "array", "items": {"type": "string"}}
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "firstName": "string",
                    "lastName": "string",
                    "email": "john.doe@marzipan.co",
                    "phone": "string",
                    "marketing": []
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Account"],
        "summary": "Update details",
        "description": "Update the authenticated user's account information such as name and email address.",
        "security": [
          {
            "accountAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts": {
      "parameters": [],
      "post": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Create Cart",
        "description": "Create a new shopping cart session. The cart can be used to add items and proceed to checkout.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "string"},
                    "items": {"type": "array", "items": {"type": "object"}},
                    "total": {"type": "string"},
                    "createdAt": {"type": "string", "format": "date-time"}
                  }
                },
                "example": {
                  "id": "uuid",
                  "items": [],
                  "total": "£0.00",
                  "createdAt": "2025-01-01T00:00:00.000000Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "errors": {"type": "object"}
                  }
                },
                "example": {
                  "message": "string",
                  "errors": {
                    "field.name": ["string"]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "options": {
                        "type": "object"
                      },
                      "price": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "893ff86d-4453-4134-9f62-5c9b7a70d74e"
        }
      ],
      "get": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Get Cart",
        "description": "Retrieve the contents and details of a specific cart including all items, totals, and applied discounts.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Update Cart",
        "description": "Update cart details such as the customer email address associated with the cart.",
        "security": [
          {
            "tenantAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Clear All Cart Items",
        "description": "Remove all items from the cart, effectively emptying it while keeping the cart session active.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/items": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "2ec7d69b-c40b-40fd-9f66-8e81130b5bb5"
        }
      ],
      "post": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Add Item to Cart",
        "description": "Add one or more items to the cart with specified quantities and product types.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        },
                        "productType": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/items/{itemId}": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "8bb107dd-4b10-4b19-ac7d-c88d21e49909"
        },
        {
          "name": "itemId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart item",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "39e460ed-c517-4bbc-b358-c05f8abcccca"
        }
      ],
      "put": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Update Cart Item Quantity",
        "description": "Update the quantity of a specific item in the cart. Set quantity to zero to remove the item.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Remove Cart Item",
        "description": "Remove a specific item from the cart completely regardless of quantity.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/discount": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "21047fd2-b068-41ed-b70c-1689af54368f"
        }
      ],
      "post": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Apply Discount to Cart",
        "description": "Apply a discount code to the cart to receive promotional pricing or special offers.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "discountCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/checkout": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "2beaa641-3076-49bc-a0f7-e91e7143e1f9"
        }
      ],
      "post": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Checkout Cart",
        "description": "Process the cart for payment and convert it to an order. Supports multiple payment providers including PayPal.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentProvider": {
                    "type": "string"
                  },
                  "paypal": {
                    "type": "object",
                    "properties": {
                      "payerId": {
                        "type": "string"
                      },
                      "orderId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/shippingMethods": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "43341d73-e9b5-4cd6-a35f-245e6c0e9aac"
        }
      ],
      "get": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Get Cart Shipping Methods",
        "description": "Retrieve available shipping methods and rates for the items in the cart based on the destination.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/countries": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "2ec7d69b-c40b-40fd-9f66-8e81130b5bb5"
        }
      ],
      "get": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Get Cart Countries",
        "description": "Get a list of countries available for shipping for the items in the current cart.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/createSetupIntent": {
      "parameters": [
        {
          "name": "cartId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the cart",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "d9c2f45b-f62f-4d60-8d1d-48929b662c6a"
        }
      ],
      "post": {
        "x-excluded": true,
        "tags": ["Carts"],
        "summary": "Create Cart Setup Intent",
        "description": "Create a payment setup intent for saving payment methods for future use with this cart.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/cms/pages": {
      "parameters": [],
      "get": {
        "tags": ["CMS"],
        "summary": "Pages",
        "description": "Retrieve a list of all CMS pages including their metadata, status, and publication dates.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {"type": "string"},
                          "name": {"type": "string", "nullable": true},
                          "metaTitle": {"type": "string"},
                          "metaDescription": {"type": "string"},
                          "status": {"type": "string"},
                          "createdAt": {"type": "string", "format": "date-time"},
                          "updatedAt": {"type": "string", "format": "date-time"},
                          "publishedAt": {"type": "string", "nullable": true}
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "slug": "string",
                      "name": null,
                      "metaTitle": "string",
                      "metaDescription": "string",
                      "status": "published|draft",
                      "createdAt": "2025-01-01T00:00:00.000000Z",
                      "updatedAt": "2025-01-01T00:00:00.000000Z",
                      "publishedAt": null
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cms/pages/{pageSlug}": {
      "parameters": [
        {
          "name": "pageSlug",
          "in": "path",
          "required": true,
          "description": "The unique slug identifier for the page",
          "schema": {
            "type": "string"
          },
          "example": "about"
        }
      ],
      "get": {
        "tags": ["CMS"],
        "summary": "Page",
        "description": "Get the full content and details of a specific CMS page by its slug identifier.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "slug": {"type": "string"},
                    "name": {"type": "string"},
                    "content": {"type": "string"},
                    "seo": {
                      "type": "object",
                      "properties": {
                        "title": {"type": "string"},
                        "description": {"type": "string"},
                        "ogImage": {"type": "string", "format": "uri"}
                      }
                    },
                    "status": {"type": "string"},
                    "fields": {"type": "object"},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "publishedAt": {"type": "string", "nullable": true}
                  }
                },
                "example": {
                  "slug": "string",
                  "name": "string",
                  "content": "string",
                  "seo": {
                    "title": "string",
                    "description": "string",
                    "ogImage": "https://cdn.marzipan.co/images/og-image.jpg"
                  },
                  "status": "published|draft",
                  "fields": {},
                  "createdAt": "2025-01-01T00:00:00.000000Z",
                  "updatedAt": "2025-01-01T00:00:00.000000Z",
                  "publishedAt": null
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/cms/collections/{collectionName}": {
      "parameters": [
        {
          "name": "collectionName",
          "in": "path",
          "required": true,
          "description": "The unique name identifier for the collection",
          "schema": {
            "type": "string"
          },
          "example": "test"
        }
      ],
      "get": {
        "tags": ["CMS"],
        "summary": "Collection",
        "description": "Retrieve all items from a specific CMS collection by its name.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "parameters": [],
      "get": {
        "tags": ["Products"],
        "summary": "Products",
        "description": "Get a paginated list of all products with filtering and sorting options. Returns product details including pricing and availability.",
        "parameters": [
          {
            "name": "collection",
            "in": "query",
            "required": false,
            "description": "Filter products by collection slug or name. Products will be ordered by their position in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "featured-products"
          },
          {
            "name": "attr",
            "in": "query",
            "required": false,
            "description": "Filter products by attributes using deep object notation. Each attribute filter accepts comma-separated values for OR matching.\n\nFormat: attr[attribute_slug]=value1,value2\n\nExample: attr[color]=red,blue&attr[size]=large\nThis returns products that are (red OR blue) AND large.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject",
            "explode": true,
            "example": {
              "color": "red,blue",
              "size": "large"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Sort products by field and direction. Format: field.direction (e.g., price.asc, name.desc). Multiple sort options can be comma-separated.",
            "schema": {
              "type": "string"
            },
            "example": "price.asc,name.desc"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit the number of results returned. Maximum 50 per page.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "example": 10
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Number of items per page. Default is 50.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 50
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of related resources to include in the response.\n\n Available options: linkedSubscriptions (includes full subscription details for products with linked subscriptions).",
            "schema": {
              "type": "string",
              "enum": ["linkedSubscriptions"]
            },
            "example": "linkedSubscriptions"
          }
        ],
        "responses": {
          "200": {
            "description": "products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "format": "uri"
                        },
                        "last": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true
                        },
                        "prev": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "currentPage": {
                          "type": "integer"
                        },
                        "from": {
                          "type": "integer"
                        },
                        "path": {
                          "type": "string",
                          "format": "uri"
                        },
                        "perPage": {
                          "type": "integer"
                        },
                        "to": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "uuid",
                      "name": "string",
                      "slug": "string",
                      "description": "string",
                      "productType": "physical|event|subscription",
                      "sku": "string",
                      "collection": "string",
                      "status": "active|inactive",
                      "image": {
                        "id": "uuid",
                        "path": "string",
                        "src": "https://cdn.marzipan.co/images/product-image.jpg",
                        "alt": null,
                        "mimeType": "image/jpeg",
                        "filename": "string"
                      },
                      "price": "£0.00",
                      "salePrice": null,
                      "subscriberPrice": null,
                      "createdAt": "2025-01-01T00:00:00.000000Z",
                      "updatedAt": "2025-01-01T00:00:00.000000Z",
                      "storeSlug": "string",
                      "subscriptionsSlug": "string",
                      "availability": "all|subscribers",
                      "upsellProducts": []
                    }
                  ],
                  "links": {
                    "first": "https://api.marzipan.co/v1/products?page=1",
                    "last": "https://api.marzipan.co/v1/products?page=5",
                    "prev": null,
                    "next": "https://api.marzipan.co/v1/products?page=2"
                  },
                  "meta": {
                    "currentPage": 1,
                    "from": 1,
                    "path": "https://api.marzipan.co/v1/products",
                    "perPage": 15,
                    "to": 15
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "parameters": [
        {
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the product",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "2c19867e-2a31-48c5-a1a6-26605b3e2dea"
        }
      ],
      "get": {
        "tags": ["Products"],
        "summary": "Get Product",
        "description": "Retrieve detailed information about a specific product by its unique identifier.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscription-packages": {
      "parameters": [],
      "get": {
        "tags": ["Subscriptions"],
        "summary": "Packages",
        "description": "List all available subscription packages including pricing and subscription type information.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "string"},
                          "subscriptionType": {"type": "string"},
                          "name": {"type": "string"},
                          "slug": {"type": "string"},
                          "description": {"type": "string"},
                          "price": {
                            "type": "object",
                            "properties": {
                              "value": {"type": "integer"},
                              "formatted": {"type": "string"},
                              "currency": {"type": "string"}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "uuid",
                      "subscriptionType": "picknmix|variable",
                      "name": "string",
                      "slug": "string",
                      "description": "string",
                      "price": {
                        "value": 0,
                        "formatted": "0.00",
                        "currency": "GBP"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscription-packages/ec30c355-f910-4fa7-aa3c-bf41115d4f48": {
      "parameters": [],
      "get": {
        "tags": ["Subscriptions"],
        "summary": "Package",
        "description": "Get detailed information about a specific subscription package by its unique identifier.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    },

    "/subscriptions/renew": {
      "parameters": [],
      "post": {
        "tags": ["Subscriptions"],
        "summary": "Renew",
        "description": "Renew an existing subscription using a renewal token and signature. Used for subscription extensions and renewals.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "renewal": {
                    "type": "string"
                  },
                  "expires": {
                    "type": "string",
                    "format": "utc-millisec"
                  },
                  "signature": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "parameters": [],
      "get": {
        "tags": ["Search"],
        "summary": "Search",
        "description": "Search across products, pages, and other content using a query string. Returns relevant results based on the search term.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "example": "Adam",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                },
                "example": {
                  "message": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}